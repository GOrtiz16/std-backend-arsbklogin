name: microservice
on:
  workflow_dispatch:

env:
  NAMESPACE: login-microservice
  CLUSTER_NAME: az-eastus-bsp-dev-newobw-aks
  CLUSTER_RESOURCE_GROUP: AZ-EASTUS-BSP-DEV-NEWOBW-ALL-RG

jobs:
  run:
    runs-on: ubuntu-latest
    environment: dev
    defaults:
      run:
        shell: bash

    steps:

      - name: Descargar Repositorio
        uses: actions/checkout@v4
        

      - uses: azure/docker-login@v1
        with:
          login-server: ${{ vars.REGISTRY_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      
      - name: Extraer nombre de repositorio
        id: repo-name
        run: |
          SERVICE=$(echo ${{ github.repository }} | cut -d'/' -f2 | cut -d'-' -f3)
          echo "::set-output name=repo::$SERVICE"

      # Set the target Azure Kubernetes Service (AKS) cluster. 
      - uses: azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}

      # Create namespace if doesn't exist
      - run: |
          kubectl create namespace ${{ env.NAMESPACE }} --dry-run -o json | kubectl apply -f -

      # Create imagepullsecret for Azure Container registry (ACR)
      - uses: azure/k8s-create-secret@v1
        with:
          container-registry-url: ${{ vars.REGISTRY_SERVER }}
          container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
          container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          secret-name: ${{ vars.REGISTRY_SERVER }}-registry-connection
          namespace: ${{ env.NAMESPACE }}

      # Baking the helm chart to generate the manifests to deploy
      - uses: azure/k8s-bake@v3
        with:
          renderEngine: 'helm'
          helmChart: './helm/' 
          helm-version: 'latest' 
        id: bake

      # Deploy app to AKS
      - uses: azure/k8s-deploy@v5
        with:
          manifests: ${{ steps.bake.outputs.manifestsBundle }}
          images: |
            ${{ vars.REGISTRY_SERVER }}/${{ steps.repo-name.outputs.repo }}:latest
          imagepullsecrets: |
            ${{ env.REGISTRY_NAME }}-registry-connection
          namespace: ${{ env.NAMESPACE }}